import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { ReactElement, useEffect, useState } from 'react'
import PostService from '../src/services/PostService'
import IPost from '../src/types/post/post.type'
import {
  Box,
  Center,
  Heading,
  Text,
  Stack,
  Avatar,
  useColorModeValue,
  Link
} from '@chakra-ui/react'
import { useQuery } from 'react-query'
import Published from '../src/components/Publised'
import Tags from '../src/components/Tags'
import NextLink from 'next/link'
import Categories from '../src/components/Categories'
const Home: NextPage = () => {
  const { isLoading, isError, data, error } = useQuery<Array<IPost>>('posts', PostService.getAll)
  useEffect(() => {
    console.log(data)
  }, [data])
  const removeHasMoreLink = (text : string) : string => {
    const myRegEx = /<p>.+<\/p>/
    const filtered = text.match(myRegEx)
    if (filtered === null){
      return 'can\'t find excerpt'
    }
    return filtered[0]
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>FullStack NodeJS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {data && data.map((post : IPost) : ReactElement<any, any> => {
          return (
            <Center key={post.id} m={10}>
              <Box maxW={'800px'}
                  w={'1000px'}
                  boxShadow={'xl'}
                  rounded={'md'}
                  p={6}
                  overflow={'hidden'}
                >
                <Stack>
                  <Heading textAlign={'center'} fontWeight={'400'}>
                    <NextLink href={`/post/${encodeURIComponent(post.slug)}`} passHref>
                      <Link>{post.title.rendered}</Link>
                    </NextLink>
                  </Heading>
                  <Box p={2}>
                    <Published authorId={post.author} date={post.date}/>
                  </Box>
                  <Box my={3}>
                    <Text dangerouslySetInnerHTML={{__html:removeHasMoreLink(post.excerpt.rendered)}} textAlign={'center'}></Text>
                  </Box>
                  <Center>
                    <Tags tagList={post.tags}/>
                  </Center>
                  <Center>
                    <Categories categories={post.categories}/>
                  </Center>
                </Stack>
              </Box>
            </Center>
          )
        })}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
